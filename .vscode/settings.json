{
  // ESLint Configuration (optimized for flat config)
  "eslint.enable": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "eslint.workingDirectories": [
    {
      "mode": "auto"
    }
  ],  "eslint.options": {
    "cache": true,
    "cacheLocation": ".eslintcache"
  },
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "eslint.run": "onSave",
  "eslint.lintTask.enable": true,
  "eslint.useFlatConfig": true,
  "eslint.debug": false,
  "eslint.rules.customizations": [
    {
      "rule": "@typescript-eslint/no-explicit-any",
      "severity": "warn"
    },
    {
      "rule": "react-hooks/exhaustive-deps",
      "severity": "error"
    },
    {
      "rule": "@typescript-eslint/no-unused-expressions",
      "severity": "error"
    }
  ],

  // TypeScript Performance Optimizations (Enhanced for Large Projects)
  "typescript.preferences.importModuleSpecifier": "relative",
  "typescript.suggest.autoImports": false,
  "typescript.updateImportsOnFileMove.enabled": "never",
  "typescript.disableAutomaticTypeAcquisition": true,
  "typescript.preferences.includePackageJsonAutoImports": "off",
  "typescript.workspaceSymbols.scope": "currentProject",
  "typescript.suggest.includeCompletionsForImportStatements": false,
  "typescript.suggest.includeCompletionsForModuleExports": false,
  "typescript.surveys.enabled": false,
  "typescript.tsc.autoDetect": "off",
  "typescript.preferences.reactjsxruntime": "react-jsx",
  "typescript.preferences.useLabelDetailsInCompletionEntries": true,
  "typescript.format.enable": false,
  "typescript.validate.enable": true,
  "typescript.suggestionActions.enabled": false,
  "typescript.experimental.tsserver.web.typeAcquisition.enabled": false,
  "typescript.experimental.tsserver.web.projectWideIntellisense.enabled": false,
  "typescript.experimental.tsserver.web.projectWideIntellisense.suppressSemanticErrors": true,
  "typescript.tsserver.experimental.enableProjectDiagnostics": false,
  "typescript.tsserver.maxTsServerMemory": 3072,
  "typescript.tsserver.useSyntaxServer": "auto",

  // JavaScript Performance Optimizations
  "javascript.preferences.importModuleSpecifier": "relative",
  "javascript.suggest.autoImports": false,
  "javascript.updateImportsOnFileMove.enabled": "never",
  "javascript.suggest.includeCompletionsForImportStatements": false,
  "javascript.suggest.includeCompletionsForModuleExports": false,

  // Editor Performance Optimizations
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  "editor.formatOnSave": false,
  "editor.formatOnPaste": false,
  "editor.formatOnType": false,
  "editor.minimap.enabled": false,
  "editor.semanticHighlighting.enabled": false,
  "editor.suggest.preview": true,
  "editor.suggest.showKeywords": false,
  "editor.suggest.showSnippets": false,
  "editor.suggest.showClasses": true,
  "editor.suggest.showFunctions": true,
  "editor.suggest.showVariables": true,
  "editor.tabCompletion": "on",
  "editor.quickSuggestions": {
    "other": "on",
    "comments": "off",
    "strings": "on"
  },
  "editor.suggestSelection": "first",
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.acceptSuggestionOnEnter": "on",
  "editor.suggest.filterGraceful": false,
  "editor.suggest.shareSuggestSelections": false,
  "editor.wordBasedSuggestions": "off",

  // File System Performance Optimizations
  "files.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/build": true,
    "**/.git": true,
    "**/coverage": true,
    "**/.eslintcache": true,
    "**/tsconfig.tsbuildinfo": true,
    "**/*.log": true,
    "**/.cache": true
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/build": true,
    "**/coverage": true,
    "**/.git": true,
    "**/.eslintcache": true,
    "**/tsconfig.tsbuildinfo": true
  },
  "files.autoSave": "onFocusChange",
  "files.autoSaveDelay": 1000,
  "files.maxMemoryForLargeFilesMB": 4096,

  // Search and Performance Settings
  "search.maxResults": 2000,
  "search.smartCase": true,
  "search.useGlobalIgnoreFiles": true,
  "search.useParentIgnoreFiles": true,

  // Tailwind CSS IntelliSense Configuration
  "tailwindCSS.includeLanguages": {
    "typescript": "html",
    "typescriptreact": "html",
    "javascript": "html",
    "javascriptreact": "html"
  },
  "tailwindCSS.experimental.classRegex": [
    "tw`([^`]*)",
    "tw=\"([^\"]*)",
    "tw={\"([^\"}]*)",
    "tw\\.\\w+`([^`]*)",
    "tw\\(.*?\\)`([^`]*)"
  ],
  "tailwindCSS.validate": true,
  "tailwindCSS.colorDecorators": true,

  // Error Lens Configuration
  "errorLens.enabledDiagnosticLevels": [
    "error",
    "warning"
  ],
  "errorLens.enabled": true,
  "errorLens.delay": 500,
  "errorLens.onSave": true,
  "errorLens.followCursor": "closestProblem",
  "errorLens.gutterIconsEnabled": true,
  "errorLens.errorColor": "rgba(240, 71, 71, 0.3)",
  "errorLens.warningColor": "rgba(255, 193, 7, 0.3)",

  // File Type Associations
  "files.associations": {
    "*.test.tsx": "typescriptreact",
    "*.test.ts": "typescript",
    "*.spec.tsx": "typescriptreact",
    "*.spec.ts": "typescript"
  },
  // Language-specific formatting
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    }
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    }
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    }
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit"
    }
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": "on",
      "strings": "on",
      "other": "on"
    }
  },

  // === GITHUB COPILOT TELEMETRY & STABILITY FIX (CONSOLIDATED) ===
  // Enable/Disable Settings
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": true,
    "scminput": false,
    "csv": false,
    "log": false,
    "html": false,
    "css": false
  },
    // Chat Configuration (DISABLED for CPU performance)
  "github.copilot.chat.enabled": false,
  "github.copilot.chat.welcomeMessage": "never",
  "github.copilot.chat.experimental.codeGeneration": false,
  "github.copilot.chat.experimental.temporalContext": false,
  "github.copilot.chat.experimental.contextualFilterInSidebar": false,
    // Editor Integration (DISABLED for CPU performance - using github.copilot.enable instead)
  "github.copilot.editor.enableCodeActions": false,
  "github.copilot.editor.iterativeFixing": false,
  "github.copilot.renameSuggestions.triggerAutomatically": false,
  
  // Data Collection & Conversation Storage
  "github.copilot.conversation.saveLocation": "never",
  
  // === CRITICAL TELEMETRY DISABLE SETTINGS ===
  "github.copilot.telemetry": false,
  "github.copilot.advanced.telemetry": false,
  "github.copilot.advanced.debug.telemetry": false,
  
  // === CRITICAL PUBLIC CODE MATCHING DISABLE SETTINGS ===
  "github.copilot.suggestions.matching": false,
  "github.copilot.suggestions.matching.enabled": false,
  "github.copilot.suggestions.matching.publicCode": false,
    // === EMERGENCY CPU PERFORMANCE RESTRICTIONS ===
  // WARNING: Copilot using 83.8% CPU - SEVERE restrictions applied
  "github.copilot.advanced": {
    "length": 25,
    "listCount": 0,
    "inlineSuggestCount": 0,
    "timeout": 500,
    "requestTimeout": 200,
    "stop": {
      "*": ["\n", "\n\n", "}", ";", ")", "]"]
    }
  },
  
  // Debug Settings (Disable All)
  "github.copilot.advanced.debug.useElectronFetch": false,
  "github.copilot.advanced.debug.overrideEngine": "",
  "github.copilot.advanced.debug.overrideProxyUrl": "",
  "github.copilot.advanced.debug.testOverrideProxyUrl": "",
  "github.copilot.advanced.debug.filterLogCategories": [],

  // Terminal Integration Configuration
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.defaultProfile.windows": "Command Prompt",
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "path": [
        "${env:ProgramFiles}\\Git\\bin\\bash.exe",
        "${env:ProgramFiles(x86)}\\Git\\bin\\bash.exe"
      ],
      "icon": "terminal-bash",
      "env": {
        "TERM": "xterm-256color"
      }
    }
  },
  "terminal.integrated.env.windows": {},
  "terminal.integrated.enableMultiLinePasteWarning": "never",
  "terminal.integrated.confirmOnExit": "never",
  "terminal.integrated.enableVisualBell": false,

  // GitHub Actions Workflow Support
  "yaml.schemas": {
    "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yml"
  },
  // === EXTENSION HOST ANTI-FREEZE CONFIGURATION ===
  // EMERGENCY: CPU usage restrictions due to 83.8% usage
  "extensions.experimental.affinity": {
    "github.copilot": 2,
    "github.copilot-chat": 2,
    "eamodio.gitlens": 3,
    "github.vscode-pull-request-github": 3,
    "mtxr.sqltools": 3
  },
  "extensions.experimental.useUtilityProcess": true,
  "extensions.verifySignature": false,
  "extensions.supportVirtualWorkspaces": {
    "github.copilot": false,
    "github.copilot-chat": false,
    "eamodio.gitlens": false
  },
  "extensions.autoCheckUpdates": false,
  "extensions.autoUpdate": false,

  // === GLOBAL TELEMETRY DISABLE ===
  "telemetry.telemetryLevel": "off",
  
  // General Performance Settings
  "workbench.enableExperiments": false,
  "workbench.settings.enableNaturalLanguageSearch": false,
  "workbench.startupEditor": "none",
  // GitHub Pull Request Extension Optimization (showInSCM deprecated - views can be dragged)
  "githubPullRequests.notifications": "off",
  "githubPullRequests.experimental.graphql": false,

  // GitLens Performance Anti-Freeze Configuration
  "gitlens.advanced.caching.enabled": false,
  "gitlens.advanced.repositorySearchDepth": 1,
  "gitlens.advanced.blame.delayAfterEdit": 2000,
  "gitlens.advanced.blame.sizeThresholdAfterEdit": 5000,
  "gitlens.blame.highlight.enabled": false,
  "gitlens.codeLens.enabled": false,
  "gitlens.gitCommands.skipConfirmations": ["fetch:command", "stash-push:command"],
  
  // SQL Tools Performance Configuration
  "sqltools.useNodeRuntime": false,
  "sqltools.connections": [],
  "sqltools.telemetry.enabled": false,
  "sqltools.results.limit": 50,
  "sqltools.format.language": "sql",
  "sqltools.completionLanguages": ["sql"],
  "sqltools.showWelcome": false,
  "sqltools.autoOpenSessionFiles": false,

  // Explorer Configuration
  "explorer.compactFolders": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock",
    "eslint.config.js": ".eslintcache"
  },

  // Disable Resource-Heavy Features
  "emmet.showExpandedAbbreviation": "never",
  "emmet.showSuggestionsAsSnippets": false,
  "git.decorations.enabled": false,
  "git.enableStatusBarSync": false,
  "git.autoRepositoryDetection": false,
  "scm.diffDecorations": "none",

  // Markdown Configuration (Enhanced for Markdown All in One Extension)
  "markdown.validate.enabled": true,
  "markdown.validate.fileLinks.enabled": "warning",
  "markdown.validate.fragmentLinks.enabled": "warning",
  "markdown.validate.ignoredLinks": [],
  "markdown.suggest.paths.enabled": true,
  "markdown.occurrencesHighlight.enabled": true,
  "markdown.preview.scrollPreviewWithEditor": true,
  "markdown.preview.scrollEditorWithPreview": true,
  "markdown.preview.markEditorSelection": true,
  "markdown.completion.respectVscodeSearchExclude": true,

  // Markdown All in One Extension Settings
  "markdown.extension.toc.enabled": true,
  "markdown.extension.toc.updateOnSave": true,
  "markdown.extension.list.indentationSize": "adaptive",
  "markdown.extension.orderedList.autoRenumber": true,
  "markdown.extension.preview.autoShowPreviewToSide": false,
  "markdown.extension.completion.root": "",

  // Prettier Configuration for Markdown
  "prettier.enable": true,
  "prettier.requireConfig": false,
  "prettier.useEditorConfig": true,
  "prettier.proseWrap": "preserve",
  "prettier.printWidth": 100,
  "prettier.tabWidth": 2,
  "prettier.useTabs": false
}
